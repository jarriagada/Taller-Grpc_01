syntax = "proto3";

package vaxi;



message Persona{

	string nombre =1;
	string apellido = 2;
	string email = 3;

}

message PersonaRequest {
	Persona persona = 1;
}

message PersonaResponse {
	string resultado = 1;
}


message ServerMultiplePersonaRequest {
	Persona persona = 1;
}

message ServerMultiplePersonaResponse {
	string resultado = 1;
}


message ClientMultiplePersonaRequest {
	Persona persona = 1;
}

message ClientMultiplePersonaResponse {
	string resultado = 1;
}


//Payload bidireccional
//envia al serividor un objeto request Persona
message BidireccionalPersonaRequest {
	Persona persona = 1;
}
//espera el response Resultado
message BidireccionalPersonaResponse {
	string resultado = 1;
}


service PersonaService {
	//gRPC Unary
	rpc RegistrarPersona(PersonaRequest) returns (PersonaResponse) {}


	//gRPC Server Streming
	//que devuelva un conjunto de responses con la palabra reservada stream
	rpc RegistrarPersonasServidorMultiple(ServerMultiplePersonaRequest) returns (stream ServerMultiplePersonaResponse){}


	//Registrar el servicio ClientMultiplePersonaResponse
	//el metodo debe implementarse dentro de una clase c#
	rpc RegistrarPersonaClientMultiple(stream ClientMultiplePersonaRequest) returns (ClientMultiplePersonaResponse){}

	//gRPC bidireccional streaming	
	//Implementar en : PersonaServiceImpl.cs
	rpc RegistrarPersonaBidireccional(stream BidireccionalPersonaRequest) returns ( stream BidireccionalPersonaResponse){}

};
